use std::collections::BTreeMap;

use lazy_static::lazy_static;
use quick_xml::events::attributes::Attributes;
use quick_xml::events::Event;
use quick_xml::Reader;

pub struct Pin {
    // Name of the pin (e.g., VDD or PA0).
    pub name: String,
    pub position: String,
    pub type_: String,
    pub gpio_modes: Vec<String>,
    pub functions: Vec<String>,
}

impl Pin {
    pub fn split_function<'a>(function: &'a str) -> (&'a str, &'a str) {
        // Some peripheral names contain underscores.
        let mut split_at = function
            .find("_")
            .expect("pin function does not contain an underscore");
        const COMPLEX_NAMES: &[&str] = &["USB_OTG_HS", "USB_OTG_FS"];
        for name in COMPLEX_NAMES {
            if function.starts_with(name) {
                split_at = name.len();
            }
        }
        (&function[0..split_at], &function[split_at + 1..])
    }
}

pub struct Mcu {
    pub package: String,
    pub pins: Vec<Pin>,
}

impl Mcu {
    pub fn load(model: &str) -> Option<Mcu> {
        // Fetch the file.
        let xml = MCUS.get(model)?;

        // Parse as XML.
        let mut reader = Reader::from_str(xml);
        reader.trim_text(true);
        let mut buf = Vec::new();
        let mut mcu = None;
        loop {
            match reader.read_event(&mut buf) {
                Ok(Event::Start(ref e)) => match e.name() {
                    b"Mcu" => {
                        if mcu.is_some() {
                            panic!("More than one Mcu tag found.");
                        }
                        let mut package = None;
                        for attribute in e.attributes() {
                            let attribute = attribute.unwrap();
                            if attribute.key == b"Package" {
                                package =
                                    Some(String::from_utf8_lossy(&attribute.value).into_owned());
                            }
                        }
                        let package = package.expect("no package specified");
                        mcu = Some(Mcu {
                            package,
                            pins: Vec::new(),
                        });
                        Self::load_mcu(&mut reader, mcu.as_mut().unwrap(), &mut buf);
                    }
                    _ => {
                        panic!("Unexpected tag {:?}, expected Mcu.", e.name());
                    }
                },
                Ok(Event::Eof) => break,
                Err(e) => panic!("Error at position {}: {:?}", reader.buffer_position(), e),
                _ => (),
            }
        }
        Some(mcu.expect("No Mcu tag found."))
    }

    pub fn all_models() -> Vec<String> {
        MCUS.keys().cloned().collect()
    }

    fn load_mcu(reader: &mut Reader<&[u8]>, mcu: &mut Mcu, buf: &mut Vec<u8>) {
        loop {
            match reader.read_event(buf) {
                Ok(Event::Start(ref e)) => match e.name() {
                    b"Pin" => {
                        let mut pin = Self::attributes_to_pin(e.attributes());
                        Self::load_pin_functions(reader, &mut pin, buf);
                        mcu.pins.push(pin);
                    }
                    _ => {
                        Self::skip_tag(reader, buf);
                    }
                },
                Ok(Event::Empty(ref e)) => match e.name() {
                    b"Pin" => {
                        let pin = Self::attributes_to_pin(e.attributes());
                        mcu.pins.push(pin);
                    }
                    _ => {}
                },
                Ok(Event::End(ref e)) => match e.name() {
                    b"Mcu" => return,
                    _ => panic!("Expected </Mcu>, got {:?}.", e.name()),
                },
                Ok(Event::Eof) => panic!("Unexpected EOF."),
                Err(e) => panic!("Error at position {}: {:?}", reader.buffer_position(), e),
                _ => (),
            }
        }
    }

    fn attributes_to_pin<'a>(attributes: Attributes<'a>) -> Pin {
        let mut name = None;
        let mut position = None;
        let mut type_ = None;
        for attribute in attributes {
            let attribute = attribute.unwrap();
            if attribute.key == b"Name" {
                name = Some(String::from_utf8_lossy(&attribute.value).into_owned());
            } else if attribute.key == b"Position" {
                position = Some(String::from_utf8_lossy(&attribute.value).into_owned());
            } else if attribute.key == b"Type" {
                type_ = Some(String::from_utf8_lossy(&attribute.value).into_owned());
            }
        }
        let name = name.expect("no pin name specified");
        let position = position.expect("no pin name specified");
        let type_ = type_.expect("no pin name specified");
        Pin {
            name,
            position,
            type_,
            gpio_modes: Vec::new(),
            functions: Vec::new(),
        }
    }

    fn load_pin_functions(reader: &mut Reader<&[u8]>, pin: &mut Pin, buf: &mut Vec<u8>) {
        loop {
            match reader.read_event(buf) {
                Ok(Event::Empty(ref e)) => match e.name() {
                    b"Signal" => {
                        let mut name = None;
                        let mut io_modes = None;
                        for attribute in e.attributes() {
                            let attribute = attribute.unwrap();
                            if attribute.key == b"Name" {
                                name = Some(String::from_utf8_lossy(&attribute.value).into_owned());
                            } else if attribute.key == b"IOModes" {
                                io_modes =
                                    Some(String::from_utf8_lossy(&attribute.value).into_owned());
                            }
                        }
                        let name = name.expect("no pin function name specified");
                        let mut io_modes = io_modes
                            .map(|modes| modes.split(",").map(|s| s.to_owned()).collect::<Vec<_>>())
                            .unwrap_or(Vec::new());
                        if name != "GPIO" && io_modes.len() != 0 {
                            panic!("I/O modes for non-GPIO function?");
                        }
                        if name == "GPIO" {
                            pin.gpio_modes.append(&mut io_modes);
                        } else {
                            pin.functions.push(name);
                        }
                    }
                    _ => {}
                },
                Ok(Event::Start(_)) => {
                    Self::skip_tag(reader, buf);
                }
                Ok(Event::End(ref e)) => match e.name() {
                    b"Pin" => return,
                    _ => panic!("Expected </Pin>, got {:?}.", e.name()),
                },
                Ok(Event::Eof) => panic!("Unexpected EOF."),
                Err(e) => panic!("Error at position {}: {:?}", reader.buffer_position(), e),
                _ => (),
            }
        }
    }

    fn skip_tag(reader: &mut Reader<&[u8]>, buf: &mut Vec<u8>) {
        let mut end_count = 1;
        loop {
            match reader.read_event(buf) {
                Ok(Event::Start(_)) => {
                    end_count += 1;
                }
                Ok(Event::End(_)) => {
                    end_count -= 1;
                    if end_count == 0 {
                        return;
                    }
                }
                Ok(Event::Eof) => panic!("Unexpected EOF."),
                Err(e) => panic!("Error at position {}: {:?}", reader.buffer_position(), e),
                _ => (),
            }
        }
    }

    pub fn list() -> Vec<String> {
        MCUS.keys().cloned().collect()
    }
}

lazy_static! {
    static ref MCUS: BTreeMap<String, &'static str> = {
        let mut mcus = BTreeMap::new();
        mcus.insert(
            "STM32F030C6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F030C6Tx.xml"),
        );
        mcus.insert(
            "STM32F030C8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F030C8Tx.xml"),
        );
        mcus.insert(
            "STM32F030CCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F030CCTx.xml"),
        );
        mcus.insert(
            "STM32F030F4Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F030F4Px.xml"),
        );
        mcus.insert(
            "STM32F030K6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F030K6Tx.xml"),
        );
        mcus.insert(
            "STM32F030R8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F030R8Tx.xml"),
        );
        mcus.insert(
            "STM32F030RCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F030RCTx.xml"),
        );
        mcus.insert(
            "STM32F031C(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F031C(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F031E6Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F031E6Yx.xml"),
        );
        mcus.insert(
            "STM32F031F(4-6)Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F031F(4-6)Px.xml"),
        );
        mcus.insert(
            "STM32F031G(4-6)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F031G(4-6)Ux.xml"),
        );
        mcus.insert(
            "STM32F031K(4-6)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F031K(4-6)Ux.xml"),
        );
        mcus.insert(
            "STM32F031K6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F031K6Tx.xml"),
        );
        mcus.insert(
            "STM32F038C6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F038C6Tx.xml"),
        );
        mcus.insert(
            "STM32F038E6Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F038E6Yx.xml"),
        );
        mcus.insert(
            "STM32F038F6Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F038F6Px.xml"),
        );
        mcus.insert(
            "STM32F038G6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F038G6Ux.xml"),
        );
        mcus.insert(
            "STM32F038K6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F038K6Ux.xml"),
        );
        mcus.insert(
            "STM32F042C(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F042C(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F042C(4-6)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F042C(4-6)Ux.xml"),
        );
        mcus.insert(
            "STM32F042F4Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F042F4Px.xml"),
        );
        mcus.insert(
            "STM32F042F6Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F042F6Px.xml"),
        );
        mcus.insert(
            "STM32F042G(4-6)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F042G(4-6)Ux.xml"),
        );
        mcus.insert(
            "STM32F042K(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F042K(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F042K(4-6)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F042K(4-6)Ux.xml"),
        );
        mcus.insert(
            "STM32F042T6Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F042T6Yx.xml"),
        );
        mcus.insert(
            "STM32F048C6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F048C6Ux.xml"),
        );
        mcus.insert(
            "STM32F048G6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F048G6Ux.xml"),
        );
        mcus.insert(
            "STM32F048T6Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F048T6Yx.xml"),
        );
        mcus.insert(
            "STM32F051C4Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051C4Tx.xml"),
        );
        mcus.insert(
            "STM32F051C4Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051C4Ux.xml"),
        );
        mcus.insert(
            "STM32F051C6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051C6Tx.xml"),
        );
        mcus.insert(
            "STM32F051C6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051C6Ux.xml"),
        );
        mcus.insert(
            "STM32F051C8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051C8Tx.xml"),
        );
        mcus.insert(
            "STM32F051C8Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051C8Ux.xml"),
        );
        mcus.insert(
            "STM32F051K4Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051K4Tx.xml"),
        );
        mcus.insert(
            "STM32F051K4Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051K4Ux.xml"),
        );
        mcus.insert(
            "STM32F051K6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051K6Tx.xml"),
        );
        mcus.insert(
            "STM32F051K6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051K6Ux.xml"),
        );
        mcus.insert(
            "STM32F051K8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051K8Tx.xml"),
        );
        mcus.insert(
            "STM32F051K8Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051K8Ux.xml"),
        );
        mcus.insert(
            "STM32F051R4Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051R4Tx.xml"),
        );
        mcus.insert(
            "STM32F051R6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051R6Tx.xml"),
        );
        mcus.insert(
            "STM32F051R8Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051R8Hx.xml"),
        );
        mcus.insert(
            "STM32F051R8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051R8Tx.xml"),
        );
        mcus.insert(
            "STM32F051T8Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F051T8Yx.xml"),
        );
        mcus.insert(
            "STM32F058C8Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F058C8Ux.xml"),
        );
        mcus.insert(
            "STM32F058R8Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F058R8Hx.xml"),
        );
        mcus.insert(
            "STM32F058R8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F058R8Tx.xml"),
        );
        mcus.insert(
            "STM32F058T8Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F058T8Yx.xml"),
        );
        mcus.insert(
            "STM32F070C6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F070C6Tx.xml"),
        );
        mcus.insert(
            "STM32F070CBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F070CBTx.xml"),
        );
        mcus.insert(
            "STM32F070F6Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F070F6Px.xml"),
        );
        mcus.insert(
            "STM32F070RBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F070RBTx.xml"),
        );
        mcus.insert(
            "STM32F071C(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F071C(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F071C(8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F071C(8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32F071CBYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F071CBYx.xml"),
        );
        mcus.insert(
            "STM32F071RBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F071RBTx.xml"),
        );
        mcus.insert(
            "STM32F071V(8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F071V(8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32F071V(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F071V(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F072C(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F072C(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F072C(8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F072C(8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32F072CBYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F072CBYx.xml"),
        );
        mcus.insert(
            "STM32F072R(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F072R(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F072RBHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F072RBHx.xml"),
        );
        mcus.insert(
            "STM32F072RBIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F072RBIx.xml"),
        );
        mcus.insert(
            "STM32F072V(8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F072V(8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32F072V(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F072V(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F078CBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F078CBTx.xml"),
        );
        mcus.insert(
            "STM32F078CBUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F078CBUx.xml"),
        );
        mcus.insert(
            "STM32F078CBYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F078CBYx.xml"),
        );
        mcus.insert(
            "STM32F078RBHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F078RBHx.xml"),
        );
        mcus.insert(
            "STM32F078RBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F078RBTx.xml"),
        );
        mcus.insert(
            "STM32F078VBHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F078VBHx.xml"),
        );
        mcus.insert(
            "STM32F078VBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F078VBTx.xml"),
        );
        mcus.insert(
            "STM32F091C(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F091C(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F091C(B-C)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F091C(B-C)Ux.xml"),
        );
        mcus.insert(
            "STM32F091R(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F091R(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F091RCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F091RCHx.xml"),
        );
        mcus.insert(
            "STM32F091RCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F091RCYx.xml"),
        );
        mcus.insert(
            "STM32F091V(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F091V(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F091VCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F091VCHx.xml"),
        );
        mcus.insert(
            "STM32F098CCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F098CCTx.xml"),
        );
        mcus.insert(
            "STM32F098CCUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F098CCUx.xml"),
        );
        mcus.insert(
            "STM32F098RCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F098RCHx.xml"),
        );
        mcus.insert(
            "STM32F098RCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F098RCTx.xml"),
        );
        mcus.insert(
            "STM32F098RCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F098RCYx.xml"),
        );
        mcus.insert(
            "STM32F098VCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F098VCHx.xml"),
        );
        mcus.insert(
            "STM32F098VCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F098VCTx.xml"),
        );
        mcus.insert(
            "STM32F100C(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100C(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F100C(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100C(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F100R(4-6)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100R(4-6)Hx.xml"),
        );
        mcus.insert(
            "STM32F100R(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100R(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F100R(8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100R(8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32F100R(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100R(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F100R(C-D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100R(C-D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F100V(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100V(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F100V(C-D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100V(C-D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F100Z(C-D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F100Z(C-D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F101C(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101C(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F101C(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101C(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F101C(8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101C(8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32F101R(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101R(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F101R(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101R(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F101RBHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101RBHx.xml"),
        );
        mcus.insert(
            "STM32F101R(C-D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101R(C-D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F101R(F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101R(F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F101T(4-6)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101T(4-6)Ux.xml"),
        );
        mcus.insert(
            "STM32F101T(8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101T(8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32F101V(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101V(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F101V(C-D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101V(C-D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F101V(F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101V(F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F101Z(C-D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101Z(C-D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F101Z(F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F101Z(F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F102C(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F102C(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F102C(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F102C(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F102R(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F102R(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F102R(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F102R(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F103C(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103C(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F103C6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103C6Ux.xml"),
        );
        mcus.insert(
            "STM32F103C(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103C(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F103CBUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103CBUx.xml"),
        );
        mcus.insert(
            "STM32F103R(4-6)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103R(4-6)Hx.xml"),
        );
        mcus.insert(
            "STM32F103R(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103R(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32F103R(8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103R(8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32F103R(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103R(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F103R(C-D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103R(C-D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F103R(C-D-E)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103R(C-D-E)Yx.xml"),
        );
        mcus.insert(
            "STM32F103R(F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103R(F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F103T(4-6)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103T(4-6)Ux.xml"),
        );
        mcus.insert(
            "STM32F103T(8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103T(8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32F103V(8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103V(8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32F103V(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103V(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F103VBIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103VBIx.xml"),
        );
        mcus.insert(
            "STM32F103V(C-D-E)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103V(C-D-E)Hx.xml"),
        );
        mcus.insert(
            "STM32F103V(C-D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103V(C-D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F103V(F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103V(F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F103Z(C-D-E)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103Z(C-D-E)Hx.xml"),
        );
        mcus.insert(
            "STM32F103Z(C-D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103Z(C-D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F103Z(F-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103Z(F-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F103Z(F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F103Z(F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F105R(8-B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F105R(8-B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F105V(8-B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F105V(8-B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F105V(8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F105V(8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32F107R(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F107R(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F107V(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F107V(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F107VCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F107VCHx.xml"),
        );
        mcus.insert(
            "STM32F205R(B-C-E-F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F205R(B-C-E-F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F205R(E-G)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F205R(E-G)Yx.xml"),
        );
        mcus.insert(
            "STM32F205RGEx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F205RGEx.xml"),
        );
        mcus.insert(
            "STM32F205V(B-C-E-F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F205V(B-C-E-F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F205Z(C-E-F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F205Z(C-E-F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F207I(C-E-F-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F207I(C-E-F-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F207I(C-E-F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F207I(C-E-F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F207V(C-E-F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F207V(C-E-F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F207Z(C-E-F-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F207Z(C-E-F-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F215R(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F215R(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F215V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F215V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F215Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F215Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F217I(E-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F217I(E-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F217I(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F217I(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F217V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F217V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F217Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F217Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F301C(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F301C(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F301C8Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F301C8Yx.xml"),
        );
        mcus.insert(
            "STM32F301K(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F301K(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F301K(6-8)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F301K(6-8)Ux.xml"),
        );
        mcus.insert(
            "STM32F301R(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F301R(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F302C(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302C(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F302C8Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302C8Yx.xml"),
        );
        mcus.insert(
            "STM32F302C(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302C(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F302K(6-8)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302K(6-8)Ux.xml"),
        );
        mcus.insert(
            "STM32F302R(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302R(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F302R(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302R(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F302R(D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302R(D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F302V(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302V(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F302VCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302VCYx.xml"),
        );
        mcus.insert(
            "STM32F302V(D-E)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302V(D-E)Hx.xml"),
        );
        mcus.insert(
            "STM32F302V(D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302V(D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F302Z(D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F302Z(D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F303C(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303C(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F303C8Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303C8Yx.xml"),
        );
        mcus.insert(
            "STM32F303C(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303C(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F303K(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303K(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F303K(6-8)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303K(6-8)Ux.xml"),
        );
        mcus.insert(
            "STM32F303R(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303R(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F303R(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303R(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F303R(D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303R(D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F303V(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303V(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F303VCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303VCYx.xml"),
        );
        mcus.insert(
            "STM32F303V(D-E)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303V(D-E)Hx.xml"),
        );
        mcus.insert(
            "STM32F303V(D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303V(D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F303VEYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303VEYx.xml"),
        );
        mcus.insert(
            "STM32F303Z(D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F303Z(D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F318C8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F318C8Tx.xml"),
        );
        mcus.insert(
            "STM32F318C8Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F318C8Yx.xml"),
        );
        mcus.insert(
            "STM32F318K8Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F318K8Ux.xml"),
        );
        mcus.insert(
            "STM32F328C8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F328C8Tx.xml"),
        );
        mcus.insert(
            "STM32F334C(4-6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F334C(4-6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F334C8Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F334C8Yx.xml"),
        );
        mcus.insert(
            "STM32F334K(4-6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F334K(4-6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F334K(4-6-8)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F334K(4-6-8)Ux.xml"),
        );
        mcus.insert(
            "STM32F334R(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F334R(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32F358CCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F358CCTx.xml"),
        );
        mcus.insert(
            "STM32F358RCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F358RCTx.xml"),
        );
        mcus.insert(
            "STM32F358VCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F358VCTx.xml"),
        );
        mcus.insert(
            "STM32F373C(8-B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F373C(8-B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F373R(8-B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F373R(8-B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F373V(8-B-C)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F373V(8-B-C)Hx.xml"),
        );
        mcus.insert(
            "STM32F373V(8-B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F373V(8-B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F378CCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F378CCTx.xml"),
        );
        mcus.insert(
            "STM32F378RCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F378RCTx.xml"),
        );
        mcus.insert(
            "STM32F378RCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F378RCYx.xml"),
        );
        mcus.insert(
            "STM32F378VCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F378VCHx.xml"),
        );
        mcus.insert(
            "STM32F378VCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F378VCTx.xml"),
        );
        mcus.insert(
            "STM32F398VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F398VETx.xml"),
        );
        mcus.insert(
            "STM32F401C(B-C)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401C(B-C)Ux.xml"),
        );
        mcus.insert(
            "STM32F401C(B-C)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401C(B-C)Yx.xml"),
        );
        mcus.insert(
            "STM32F401CCFx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401CCFx.xml"),
        );
        mcus.insert(
            "STM32F401C(D-E)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401C(D-E)Ux.xml"),
        );
        mcus.insert(
            "STM32F401C(D-E)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401C(D-E)Yx.xml"),
        );
        mcus.insert(
            "STM32F401R(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401R(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F401R(D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401R(D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F401V(B-C)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401V(B-C)Hx.xml"),
        );
        mcus.insert(
            "STM32F401V(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401V(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32F401V(D-E)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401V(D-E)Hx.xml"),
        );
        mcus.insert(
            "STM32F401V(D-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F401V(D-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F405O(E-G)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F405O(E-G)Yx.xml"),
        );
        mcus.insert(
            "STM32F405RGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F405RGTx.xml"),
        );
        mcus.insert(
            "STM32F405VGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F405VGTx.xml"),
        );
        mcus.insert(
            "STM32F405ZGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F405ZGTx.xml"),
        );
        mcus.insert(
            "STM32F407I(E-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F407I(E-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F407I(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F407I(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F407V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F407V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F407Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F407Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F410C(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F410C(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F410C(8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F410C(8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32F410R(8-B)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F410R(8-B)Ix.xml"),
        );
        mcus.insert(
            "STM32F410R(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F410R(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32F410T(8-B)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F410T(8-B)Yx.xml"),
        );
        mcus.insert(
            "STM32F411C(C-E)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F411C(C-E)Ux.xml"),
        );
        mcus.insert(
            "STM32F411C(C-E)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F411C(C-E)Yx.xml"),
        );
        mcus.insert(
            "STM32F411R(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F411R(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F411V(C-E)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F411V(C-E)Hx.xml"),
        );
        mcus.insert(
            "STM32F411V(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F411V(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F412C(E-G)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F412C(E-G)Ux.xml"),
        );
        mcus.insert(
            "STM32F412R(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F412R(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F412R(E-G)YxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F412R(E-G)YxP.xml"),
        );
        mcus.insert(
            "STM32F412R(E-G)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F412R(E-G)Yx.xml"),
        );
        mcus.insert(
            "STM32F412V(E-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F412V(E-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F412V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F412V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F412Z(E-G)Jx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F412Z(E-G)Jx.xml"),
        );
        mcus.insert(
            "STM32F412Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F412Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F413C(G-H)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F413C(G-H)Ux.xml"),
        );
        mcus.insert(
            "STM32F413M(G-H)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F413M(G-H)Yx.xml"),
        );
        mcus.insert(
            "STM32F413R(G-H)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F413R(G-H)Tx.xml"),
        );
        mcus.insert(
            "STM32F413V(G-H)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F413V(G-H)Hx.xml"),
        );
        mcus.insert(
            "STM32F413V(G-H)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F413V(G-H)Tx.xml"),
        );
        mcus.insert(
            "STM32F413Z(G-H)Jx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F413Z(G-H)Jx.xml"),
        );
        mcus.insert(
            "STM32F413Z(G-H)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F413Z(G-H)Tx.xml"),
        );
        mcus.insert(
            "STM32F415OGYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F415OGYx.xml"),
        );
        mcus.insert(
            "STM32F415RGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F415RGTx.xml"),
        );
        mcus.insert(
            "STM32F415VGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F415VGTx.xml"),
        );
        mcus.insert(
            "STM32F415ZGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F415ZGTx.xml"),
        );
        mcus.insert(
            "STM32F417I(E-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F417I(E-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F417I(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F417I(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F417V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F417V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F417Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F417Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F423CHUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F423CHUx.xml"),
        );
        mcus.insert(
            "STM32F423MHYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F423MHYx.xml"),
        );
        mcus.insert(
            "STM32F423RHTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F423RHTx.xml"),
        );
        mcus.insert(
            "STM32F423VHHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F423VHHx.xml"),
        );
        mcus.insert(
            "STM32F423VHTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F423VHTx.xml"),
        );
        mcus.insert(
            "STM32F423ZHJx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F423ZHJx.xml"),
        );
        mcus.insert(
            "STM32F423ZHTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F423ZHTx.xml"),
        );
        mcus.insert(
            "STM32F427A(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F427A(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F427I(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F427I(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F427I(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F427I(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F427V(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F427V(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F427Z(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F427Z(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F429A(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429A(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F429B(E-G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429B(E-G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F429I(E-G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429I(E-G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F429I(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429I(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F429IITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429IITx.xml"),
        );
        mcus.insert(
            "STM32F429N(E-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429N(E-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F429NIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429NIHx.xml"),
        );
        mcus.insert(
            "STM32F429V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F429VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429VITx.xml"),
        );
        mcus.insert(
            "STM32F429Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F429ZGYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429ZGYx.xml"),
        );
        mcus.insert(
            "STM32F429ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429ZITx.xml"),
        );
        mcus.insert(
            "STM32F429ZIYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F429ZIYx.xml"),
        );
        mcus.insert(
            "STM32F437AIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F437AIHx.xml"),
        );
        mcus.insert(
            "STM32F437I(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F437I(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F437I(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F437I(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F437V(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F437V(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F437Z(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F437Z(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F439AIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F439AIHx.xml"),
        );
        mcus.insert(
            "STM32F439B(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F439B(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F439I(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F439I(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F439I(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F439I(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F439N(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F439N(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F439V(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F439V(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F439Z(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F439Z(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F439Z(G-I)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F439Z(G-I)Yx.xml"),
        );
        mcus.insert(
            "STM32F446M(C-E)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F446M(C-E)Yx.xml"),
        );
        mcus.insert(
            "STM32F446R(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F446R(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F446V(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F446V(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F446Z(C-E)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F446Z(C-E)Hx.xml"),
        );
        mcus.insert(
            "STM32F446Z(C-E)Jx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F446Z(C-E)Jx.xml"),
        );
        mcus.insert(
            "STM32F446Z(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F446Z(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F469A(E-G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469A(E-G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F469A(E-G-I)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469A(E-G-I)Yx.xml"),
        );
        mcus.insert(
            "STM32F469B(E-G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469B(E-G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F469I(E-G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469I(E-G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F469I(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469I(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F469IITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469IITx.xml"),
        );
        mcus.insert(
            "STM32F469N(E-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469N(E-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F469NIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469NIHx.xml"),
        );
        mcus.insert(
            "STM32F469V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F469VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469VITx.xml"),
        );
        mcus.insert(
            "STM32F469Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F469ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F469ZITx.xml"),
        );
        mcus.insert(
            "STM32F479A(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F479A(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F479A(G-I)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F479A(G-I)Yx.xml"),
        );
        mcus.insert(
            "STM32F479B(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F479B(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F479I(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F479I(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F479I(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F479I(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F479N(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F479N(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F479V(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F479V(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F479Z(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F479Z(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F722I(C-E)Kx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F722I(C-E)Kx.xml"),
        );
        mcus.insert(
            "STM32F722I(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F722I(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F722R(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F722R(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F722V(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F722V(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F722Z(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F722Z(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F723I(C-E)Kx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F723I(C-E)Kx.xml"),
        );
        mcus.insert(
            "STM32F723I(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F723I(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F723V(C-E)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F723V(C-E)Yx.xml"),
        );
        mcus.insert(
            "STM32F723Z(C-E)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F723Z(C-E)Ix.xml"),
        );
        mcus.insert(
            "STM32F723Z(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F723Z(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32F730I8Kx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F730I8Kx.xml"),
        );
        mcus.insert(
            "STM32F730R8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F730R8Tx.xml"),
        );
        mcus.insert(
            "STM32F730V8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F730V8Tx.xml"),
        );
        mcus.insert(
            "STM32F730Z8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F730Z8Tx.xml"),
        );
        mcus.insert(
            "STM32F732IEKx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F732IEKx.xml"),
        );
        mcus.insert(
            "STM32F732IETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F732IETx.xml"),
        );
        mcus.insert(
            "STM32F732RETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F732RETx.xml"),
        );
        mcus.insert(
            "STM32F732VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F732VETx.xml"),
        );
        mcus.insert(
            "STM32F732ZETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F732ZETx.xml"),
        );
        mcus.insert(
            "STM32F733IEKx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F733IEKx.xml"),
        );
        mcus.insert(
            "STM32F733IETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F733IETx.xml"),
        );
        mcus.insert(
            "STM32F733VEYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F733VEYx.xml"),
        );
        mcus.insert(
            "STM32F733ZEIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F733ZEIx.xml"),
        );
        mcus.insert(
            "STM32F733ZETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F733ZETx.xml"),
        );
        mcus.insert(
            "STM32F745I(E-G)Kx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F745I(E-G)Kx.xml"),
        );
        mcus.insert(
            "STM32F745I(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F745I(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F745V(E-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F745V(E-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F745V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F745V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F745Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F745Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F746B(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746B(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32F746I(E-G)Kx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746I(E-G)Kx.xml"),
        );
        mcus.insert(
            "STM32F746IETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746IETx.xml"),
        );
        mcus.insert(
            "STM32F746IGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746IGTx.xml"),
        );
        mcus.insert(
            "STM32F746NEHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746NEHx.xml"),
        );
        mcus.insert(
            "STM32F746NGHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746NGHx.xml"),
        );
        mcus.insert(
            "STM32F746V(E-G)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746V(E-G)Hx.xml"),
        );
        mcus.insert(
            "STM32F746VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746VETx.xml"),
        );
        mcus.insert(
            "STM32F746VGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746VGTx.xml"),
        );
        mcus.insert(
            "STM32F746Z(E-G)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746Z(E-G)Yx.xml"),
        );
        mcus.insert(
            "STM32F746ZETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746ZETx.xml"),
        );
        mcus.insert(
            "STM32F746ZGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F746ZGTx.xml"),
        );
        mcus.insert(
            "STM32F750N8Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F750N8Hx.xml"),
        );
        mcus.insert(
            "STM32F750V8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F750V8Tx.xml"),
        );
        mcus.insert(
            "STM32F750Z8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F750Z8Tx.xml"),
        );
        mcus.insert(
            "STM32F756BGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F756BGTx.xml"),
        );
        mcus.insert(
            "STM32F756IGKx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F756IGKx.xml"),
        );
        mcus.insert(
            "STM32F756IGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F756IGTx.xml"),
        );
        mcus.insert(
            "STM32F756NGHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F756NGHx.xml"),
        );
        mcus.insert(
            "STM32F756VGHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F756VGHx.xml"),
        );
        mcus.insert(
            "STM32F756VGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F756VGTx.xml"),
        );
        mcus.insert(
            "STM32F756ZGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F756ZGTx.xml"),
        );
        mcus.insert(
            "STM32F756ZGYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F756ZGYx.xml"),
        );
        mcus.insert(
            "STM32F765B(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F765B(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F765I(G-I)Kx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F765I(G-I)Kx.xml"),
        );
        mcus.insert(
            "STM32F765I(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F765I(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F765N(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F765N(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F765V(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F765V(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F765V(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F765V(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F765Z(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F765Z(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F767B(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767B(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F767I(G-I)Kx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767I(G-I)Kx.xml"),
        );
        mcus.insert(
            "STM32F767I(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767I(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F767N(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767N(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32F767VGHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767VGHx.xml"),
        );
        mcus.insert(
            "STM32F767VGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767VGTx.xml"),
        );
        mcus.insert(
            "STM32F767VIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767VIHx.xml"),
        );
        mcus.insert(
            "STM32F767VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767VITx.xml"),
        );
        mcus.insert(
            "STM32F767ZGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767ZGTx.xml"),
        );
        mcus.insert(
            "STM32F767ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F767ZITx.xml"),
        );
        mcus.insert(
            "STM32F768AIYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F768AIYx.xml"),
        );
        mcus.insert(
            "STM32F769A(G-I)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F769A(G-I)Yx.xml"),
        );
        mcus.insert(
            "STM32F769B(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F769B(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32F769IGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F769IGTx.xml"),
        );
        mcus.insert(
            "STM32F769IITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F769IITx.xml"),
        );
        mcus.insert(
            "STM32F769NGHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F769NGHx.xml"),
        );
        mcus.insert(
            "STM32F769NIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F769NIHx.xml"),
        );
        mcus.insert(
            "STM32F777BITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F777BITx.xml"),
        );
        mcus.insert(
            "STM32F777IIKx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F777IIKx.xml"),
        );
        mcus.insert(
            "STM32F777IITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F777IITx.xml"),
        );
        mcus.insert(
            "STM32F777NIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F777NIHx.xml"),
        );
        mcus.insert(
            "STM32F777VIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F777VIHx.xml"),
        );
        mcus.insert(
            "STM32F777VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F777VITx.xml"),
        );
        mcus.insert(
            "STM32F777ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F777ZITx.xml"),
        );
        mcus.insert(
            "STM32F778AIYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F778AIYx.xml"),
        );
        mcus.insert(
            "STM32F779AIYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F779AIYx.xml"),
        );
        mcus.insert(
            "STM32F779BITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F779BITx.xml"),
        );
        mcus.insert(
            "STM32F779IITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F779IITx.xml"),
        );
        mcus.insert(
            "STM32F779NIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32F779NIHx.xml"),
        );
        mcus.insert(
            "STM32G070CBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G070CBTx.xml"),
        );
        mcus.insert(
            "STM32G070KBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G070KBTx.xml"),
        );
        mcus.insert(
            "STM32G070RBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G070RBTx.xml"),
        );
        mcus.insert(
            "STM32G071C(6-8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071C(6-8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32G071C(6-8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071C(6-8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32G071EBYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071EBYx.xml"),
        );
        mcus.insert(
            "STM32G071G(6-8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071G(6-8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32G071G(8-B)UxN".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071G(8-B)UxN.xml"),
        );
        mcus.insert(
            "STM32G071K(6-8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071K(6-8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32G071K(6-8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071K(6-8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32G071K(8-B)TxN".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071K(8-B)TxN.xml"),
        );
        mcus.insert(
            "STM32G071K(8-B)UxN".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071K(8-B)UxN.xml"),
        );
        mcus.insert(
            "STM32G071R(6-8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071R(6-8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32G071RBIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G071RBIx.xml"),
        );
        mcus.insert(
            "STM32G081CBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081CBTx.xml"),
        );
        mcus.insert(
            "STM32G081CBUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081CBUx.xml"),
        );
        mcus.insert(
            "STM32G081EBYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081EBYx.xml"),
        );
        mcus.insert(
            "STM32G081GBUxN".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081GBUxN.xml"),
        );
        mcus.insert(
            "STM32G081GBUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081GBUx.xml"),
        );
        mcus.insert(
            "STM32G081KBTxN".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081KBTxN.xml"),
        );
        mcus.insert(
            "STM32G081KBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081KBTx.xml"),
        );
        mcus.insert(
            "STM32G081KBUxN".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081KBUxN.xml"),
        );
        mcus.insert(
            "STM32G081KBUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081KBUx.xml"),
        );
        mcus.insert(
            "STM32G081RBIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081RBIx.xml"),
        );
        mcus.insert(
            "STM32G081RBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G081RBTx.xml"),
        );
        mcus.insert(
            "STM32H743A(G-I)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H743A(G-I)Ix.xml"),
        );
        mcus.insert(
            "STM32H743BITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H743BITx.xml"),
        );
        mcus.insert(
            "STM32H743IIKx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H743IIKx.xml"),
        );
        mcus.insert(
            "STM32H743IITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H743IITx.xml"),
        );
        mcus.insert(
            "STM32H743V(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H743V(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32H743VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H743VITx.xml"),
        );
        mcus.insert(
            "STM32H743XIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H743XIHx.xml"),
        );
        mcus.insert(
            "STM32H743ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H743ZITx.xml"),
        );
        mcus.insert(
            "STM32H750IBKx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H750IBKx.xml"),
        );
        mcus.insert(
            "STM32H750VBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H750VBTx.xml"),
        );
        mcus.insert(
            "STM32H750XBHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H750XBHx.xml"),
        );
        mcus.insert(
            "STM32H753A(G-I)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H753A(G-I)Ix.xml"),
        );
        mcus.insert(
            "STM32H753BITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H753BITx.xml"),
        );
        mcus.insert(
            "STM32H753IIKx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H753IIKx.xml"),
        );
        mcus.insert(
            "STM32H753IITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H753IITx.xml"),
        );
        mcus.insert(
            "STM32H753V(G-I)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H753V(G-I)Hx.xml"),
        );
        mcus.insert(
            "STM32H753VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H753VITx.xml"),
        );
        mcus.insert(
            "STM32H753XIHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H753XIHx.xml"),
        );
        mcus.insert(
            "STM32H753ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32H753ZITx.xml"),
        );
        mcus.insert(
            "STM32L010C6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L010C6Tx.xml"),
        );
        mcus.insert(
            "STM32L010F4Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L010F4Px.xml"),
        );
        mcus.insert(
            "STM32L010K4Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L010K4Tx.xml"),
        );
        mcus.insert(
            "STM32L010K8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L010K8Tx.xml"),
        );
        mcus.insert(
            "STM32L010R8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L010R8Tx.xml"),
        );
        mcus.insert(
            "STM32L010RBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L010RBTx.xml"),
        );
        mcus.insert(
            "STM32L011D(3-4)Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L011D(3-4)Px.xml"),
        );
        mcus.insert(
            "STM32L011E(3-4)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L011E(3-4)Yx.xml"),
        );
        mcus.insert(
            "STM32L011F(3-4)Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L011F(3-4)Px.xml"),
        );
        mcus.insert(
            "STM32L011F(3-4)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L011F(3-4)Ux.xml"),
        );
        mcus.insert(
            "STM32L011G(3-4)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L011G(3-4)Ux.xml"),
        );
        mcus.insert(
            "STM32L011K(3-4)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L011K(3-4)Tx.xml"),
        );
        mcus.insert(
            "STM32L011K(3-4)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L011K(3-4)Ux.xml"),
        );
        mcus.insert(
            "STM32L021D4Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L021D4Px.xml"),
        );
        mcus.insert(
            "STM32L021F4Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L021F4Px.xml"),
        );
        mcus.insert(
            "STM32L021F4Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L021F4Ux.xml"),
        );
        mcus.insert(
            "STM32L021G4Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L021G4Ux.xml"),
        );
        mcus.insert(
            "STM32L021K4Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L021K4Tx.xml"),
        );
        mcus.insert(
            "STM32L021K4Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L021K4Ux.xml"),
        );
        mcus.insert(
            "STM32L031C(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L031C(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32L031C6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L031C6Ux.xml"),
        );
        mcus.insert(
            "STM32L031E(4-6)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L031E(4-6)Yx.xml"),
        );
        mcus.insert(
            "STM32L031F(4-6)Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L031F(4-6)Px.xml"),
        );
        mcus.insert(
            "STM32L031G(4-6)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L031G(4-6)Ux.xml"),
        );
        mcus.insert(
            "STM32L031G6UxS".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L031G6UxS.xml"),
        );
        mcus.insert(
            "STM32L031K(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L031K(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32L031K(4-6)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L031K(4-6)Ux.xml"),
        );
        mcus.insert(
            "STM32L041C(4-6)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L041C(4-6)Tx.xml"),
        );
        mcus.insert(
            "STM32L041E6Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L041E6Yx.xml"),
        );
        mcus.insert(
            "STM32L041F6Px".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L041F6Px.xml"),
        );
        mcus.insert(
            "STM32L041G6UxS".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L041G6UxS.xml"),
        );
        mcus.insert(
            "STM32L041G6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L041G6Ux.xml"),
        );
        mcus.insert(
            "STM32L041K6Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L041K6Tx.xml"),
        );
        mcus.insert(
            "STM32L041K6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L041K6Ux.xml"),
        );
        mcus.insert(
            "STM32L051C(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L051C(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32L051K(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L051K(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32L051K(6-8)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L051K(6-8)Ux.xml"),
        );
        mcus.insert(
            "STM32L051R(6-8)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L051R(6-8)Hx.xml"),
        );
        mcus.insert(
            "STM32L051R(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L051R(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32L051T(6-8)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L051T(6-8)Yx.xml"),
        );
        mcus.insert(
            "STM32L052C(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L052C(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32L052K(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L052K(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32L052K(6-8)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L052K(6-8)Ux.xml"),
        );
        mcus.insert(
            "STM32L052R(6-8)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L052R(6-8)Hx.xml"),
        );
        mcus.insert(
            "STM32L052R(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L052R(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32L052T(6-8)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L052T(6-8)Yx.xml"),
        );
        mcus.insert(
            "STM32L052T8Fx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L052T8Fx.xml"),
        );
        mcus.insert(
            "STM32L053C(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L053C(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32L053R(6-8)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L053R(6-8)Hx.xml"),
        );
        mcus.insert(
            "STM32L053R(6-8)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L053R(6-8)Tx.xml"),
        );
        mcus.insert(
            "STM32L062K8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L062K8Tx.xml"),
        );
        mcus.insert(
            "STM32L062K8Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L062K8Ux.xml"),
        );
        mcus.insert(
            "STM32L063C8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L063C8Tx.xml"),
        );
        mcus.insert(
            "STM32L063R8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L063R8Tx.xml"),
        );
        mcus.insert(
            "STM32L071C8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071C8Tx.xml"),
        );
        mcus.insert(
            "STM32L071C(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071C(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L071C(B-Z)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071C(B-Z)Yx.xml"),
        );
        mcus.insert(
            "STM32L071K8Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071K8Ux.xml"),
        );
        mcus.insert(
            "STM32L071K(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071K(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L071K(B-Z)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071K(B-Z)Ux.xml"),
        );
        mcus.insert(
            "STM32L071R(B-Z)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071R(B-Z)Hx.xml"),
        );
        mcus.insert(
            "STM32L071R(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071R(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L071V8Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071V8Ix.xml"),
        );
        mcus.insert(
            "STM32L071V8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071V8Tx.xml"),
        );
        mcus.insert(
            "STM32L071V(B-Z)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071V(B-Z)Ix.xml"),
        );
        mcus.insert(
            "STM32L071V(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L071V(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L072C(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072C(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L072C(B-Z)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072C(B-Z)Yx.xml"),
        );
        mcus.insert(
            "STM32L072CZEx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072CZEx.xml"),
        );
        mcus.insert(
            "STM32L072K(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072K(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L072K(B-Z)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072K(B-Z)Ux.xml"),
        );
        mcus.insert(
            "STM32L072R(B-Z)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072R(B-Z)Hx.xml"),
        );
        mcus.insert(
            "STM32L072R(B-Z)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072R(B-Z)Ix.xml"),
        );
        mcus.insert(
            "STM32L072R(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072R(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L072V8Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072V8Ix.xml"),
        );
        mcus.insert(
            "STM32L072V8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072V8Tx.xml"),
        );
        mcus.insert(
            "STM32L072V(B-Z)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072V(B-Z)Ix.xml"),
        );
        mcus.insert(
            "STM32L072V(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L072V(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L073C(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L073C(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L073R(B-Z)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L073R(B-Z)Hx.xml"),
        );
        mcus.insert(
            "STM32L073R(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L073R(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L073RZIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L073RZIx.xml"),
        );
        mcus.insert(
            "STM32L073V8Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L073V8Ix.xml"),
        );
        mcus.insert(
            "STM32L073V8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L073V8Tx.xml"),
        );
        mcus.insert(
            "STM32L073V(B-Z)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L073V(B-Z)Ix.xml"),
        );
        mcus.insert(
            "STM32L073V(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L073V(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L081C(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L081C(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L081KZTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L081KZTx.xml"),
        );
        mcus.insert(
            "STM32L081KZUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L081KZUx.xml"),
        );
        mcus.insert(
            "STM32L082CZYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L082CZYx.xml"),
        );
        mcus.insert(
            "STM32L082K(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L082K(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L082K(B-Z)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L082K(B-Z)Ux.xml"),
        );
        mcus.insert(
            "STM32L083C(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L083C(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L083R(B-Z)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L083R(B-Z)Hx.xml"),
        );
        mcus.insert(
            "STM32L083R(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L083R(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L083V8Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L083V8Ix.xml"),
        );
        mcus.insert(
            "STM32L083V8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L083V8Tx.xml"),
        );
        mcus.insert(
            "STM32L083V(B-Z)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L083V(B-Z)Ix.xml"),
        );
        mcus.insert(
            "STM32L083V(B-Z)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L083V(B-Z)Tx.xml"),
        );
        mcus.insert(
            "STM32L100C6UxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L100C6UxA.xml"),
        );
        mcus.insert(
            "STM32L100C6Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L100C6Ux.xml"),
        );
        mcus.insert(
            "STM32L100R(8-B)TxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L100R(8-B)TxA.xml"),
        );
        mcus.insert(
            "STM32L100R(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L100R(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32L100RCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L100RCTx.xml"),
        );
        mcus.insert(
            "STM32L151C(6-8-B)TxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151C(6-8-B)TxA.xml"),
        );
        mcus.insert(
            "STM32L151C(6-8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151C(6-8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32L151C(6-8-B)UxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151C(6-8-B)UxA.xml"),
        );
        mcus.insert(
            "STM32L151C(6-8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151C(6-8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32L151CCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151CCTx.xml"),
        );
        mcus.insert(
            "STM32L151CCUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151CCUx.xml"),
        );
        mcus.insert(
            "STM32L151QCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151QCHx.xml"),
        );
        mcus.insert(
            "STM32L151QDHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151QDHx.xml"),
        );
        mcus.insert(
            "STM32L151QEHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151QEHx.xml"),
        );
        mcus.insert(
            "STM32L151R(6-8-B)HxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151R(6-8-B)HxA.xml"),
        );
        mcus.insert(
            "STM32L151R(6-8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151R(6-8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32L151R(6-8-B)TxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151R(6-8-B)TxA.xml"),
        );
        mcus.insert(
            "STM32L151R(6-8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151R(6-8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32L151RCTxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151RCTxA.xml"),
        );
        mcus.insert(
            "STM32L151RCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151RCTx.xml"),
        );
        mcus.insert(
            "STM32L151RCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151RCYx.xml"),
        );
        mcus.insert(
            "STM32L151RDTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151RDTx.xml"),
        );
        mcus.insert(
            "STM32L151RDYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151RDYx.xml"),
        );
        mcus.insert(
            "STM32L151RETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151RETx.xml"),
        );
        mcus.insert(
            "STM32L151UCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151UCYx.xml"),
        );
        mcus.insert(
            "STM32L151V(8-B)HxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151V(8-B)HxA.xml"),
        );
        mcus.insert(
            "STM32L151V(8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151V(8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32L151V(8-B)TxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151V(8-B)TxA.xml"),
        );
        mcus.insert(
            "STM32L151V(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151V(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32L151VCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151VCHx.xml"),
        );
        mcus.insert(
            "STM32L151VCTxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151VCTxA.xml"),
        );
        mcus.insert(
            "STM32L151VCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151VCTx.xml"),
        );
        mcus.insert(
            "STM32L151VDTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151VDTx.xml"),
        );
        mcus.insert(
            "STM32L151VDTxX".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151VDTxX.xml"),
        );
        mcus.insert(
            "STM32L151VDYxX".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151VDYxX.xml"),
        );
        mcus.insert(
            "STM32L151VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151VETx.xml"),
        );
        mcus.insert(
            "STM32L151VEYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151VEYx.xml"),
        );
        mcus.insert(
            "STM32L151ZCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151ZCTx.xml"),
        );
        mcus.insert(
            "STM32L151ZDTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151ZDTx.xml"),
        );
        mcus.insert(
            "STM32L151ZETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L151ZETx.xml"),
        );
        mcus.insert(
            "STM32L152C(6-8-B)TxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152C(6-8-B)TxA.xml"),
        );
        mcus.insert(
            "STM32L152C(6-8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152C(6-8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32L152C(6-8-B)UxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152C(6-8-B)UxA.xml"),
        );
        mcus.insert(
            "STM32L152C(6-8-B)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152C(6-8-B)Ux.xml"),
        );
        mcus.insert(
            "STM32L152CCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152CCTx.xml"),
        );
        mcus.insert(
            "STM32L152CCUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152CCUx.xml"),
        );
        mcus.insert(
            "STM32L152QCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152QCHx.xml"),
        );
        mcus.insert(
            "STM32L152QDHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152QDHx.xml"),
        );
        mcus.insert(
            "STM32L152QEHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152QEHx.xml"),
        );
        mcus.insert(
            "STM32L152R(6-8-B)HxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152R(6-8-B)HxA.xml"),
        );
        mcus.insert(
            "STM32L152R(6-8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152R(6-8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32L152R(6-8-B)TxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152R(6-8-B)TxA.xml"),
        );
        mcus.insert(
            "STM32L152R(6-8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152R(6-8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32L152RCTxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152RCTxA.xml"),
        );
        mcus.insert(
            "STM32L152RCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152RCTx.xml"),
        );
        mcus.insert(
            "STM32L152RDTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152RDTx.xml"),
        );
        mcus.insert(
            "STM32L152RDYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152RDYx.xml"),
        );
        mcus.insert(
            "STM32L152RETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152RETx.xml"),
        );
        mcus.insert(
            "STM32L152UCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152UCYx.xml"),
        );
        mcus.insert(
            "STM32L152V(8-B)HxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152V(8-B)HxA.xml"),
        );
        mcus.insert(
            "STM32L152V(8-B)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152V(8-B)Hx.xml"),
        );
        mcus.insert(
            "STM32L152V(8-B)TxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152V(8-B)TxA.xml"),
        );
        mcus.insert(
            "STM32L152V(8-B)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152V(8-B)Tx.xml"),
        );
        mcus.insert(
            "STM32L152VCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152VCHx.xml"),
        );
        mcus.insert(
            "STM32L152VCTxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152VCTxA.xml"),
        );
        mcus.insert(
            "STM32L152VCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152VCTx.xml"),
        );
        mcus.insert(
            "STM32L152VDTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152VDTx.xml"),
        );
        mcus.insert(
            "STM32L152VDTxX".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152VDTxX.xml"),
        );
        mcus.insert(
            "STM32L152VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152VETx.xml"),
        );
        mcus.insert(
            "STM32L152VEYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152VEYx.xml"),
        );
        mcus.insert(
            "STM32L152ZCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152ZCTx.xml"),
        );
        mcus.insert(
            "STM32L152ZDTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152ZDTx.xml"),
        );
        mcus.insert(
            "STM32L152ZETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L152ZETx.xml"),
        );
        mcus.insert(
            "STM32L162QDHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162QDHx.xml"),
        );
        mcus.insert(
            "STM32L162RCTxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162RCTxA.xml"),
        );
        mcus.insert(
            "STM32L162RCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162RCTx.xml"),
        );
        mcus.insert(
            "STM32L162RDTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162RDTx.xml"),
        );
        mcus.insert(
            "STM32L162RDYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162RDYx.xml"),
        );
        mcus.insert(
            "STM32L162RETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162RETx.xml"),
        );
        mcus.insert(
            "STM32L162VCHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162VCHx.xml"),
        );
        mcus.insert(
            "STM32L162VCTxA".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162VCTxA.xml"),
        );
        mcus.insert(
            "STM32L162VCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162VCTx.xml"),
        );
        mcus.insert(
            "STM32L162VDTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162VDTx.xml"),
        );
        mcus.insert(
            "STM32L162VDYxX".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162VDYxX.xml"),
        );
        mcus.insert(
            "STM32L162VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162VETx.xml"),
        );
        mcus.insert(
            "STM32L162VEYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162VEYx.xml"),
        );
        mcus.insert(
            "STM32L162ZDTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162ZDTx.xml"),
        );
        mcus.insert(
            "STM32L162ZETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L162ZETx.xml"),
        );
        mcus.insert(
            "STM32L412C8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412C8Tx.xml"),
        );
        mcus.insert(
            "STM32L412C8Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412C8Ux.xml"),
        );
        mcus.insert(
            "STM32L412CBTxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412CBTxP.xml"),
        );
        mcus.insert(
            "STM32L412CBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412CBTx.xml"),
        );
        mcus.insert(
            "STM32L412CBUxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412CBUxP.xml"),
        );
        mcus.insert(
            "STM32L412CBUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412CBUx.xml"),
        );
        mcus.insert(
            "STM32L412K8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412K8Tx.xml"),
        );
        mcus.insert(
            "STM32L412K8Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412K8Ux.xml"),
        );
        mcus.insert(
            "STM32L412KBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412KBTx.xml"),
        );
        mcus.insert(
            "STM32L412KBUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412KBUx.xml"),
        );
        mcus.insert(
            "STM32L412R8Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412R8Ix.xml"),
        );
        mcus.insert(
            "STM32L412R8Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412R8Tx.xml"),
        );
        mcus.insert(
            "STM32L412RBIxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412RBIxP.xml"),
        );
        mcus.insert(
            "STM32L412RBIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412RBIx.xml"),
        );
        mcus.insert(
            "STM32L412RBTxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412RBTxP.xml"),
        );
        mcus.insert(
            "STM32L412RBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412RBTx.xml"),
        );
        mcus.insert(
            "STM32L412T8Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412T8Yx.xml"),
        );
        mcus.insert(
            "STM32L412TBYxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412TBYxP.xml"),
        );
        mcus.insert(
            "STM32L412TBYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L412TBYx.xml"),
        );
        mcus.insert(
            "STM32L422CBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L422CBTx.xml"),
        );
        mcus.insert(
            "STM32L422CBUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L422CBUx.xml"),
        );
        mcus.insert(
            "STM32L422KBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L422KBTx.xml"),
        );
        mcus.insert(
            "STM32L422KBUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L422KBUx.xml"),
        );
        mcus.insert(
            "STM32L422RBIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L422RBIx.xml"),
        );
        mcus.insert(
            "STM32L422RBTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L422RBTx.xml"),
        );
        mcus.insert(
            "STM32L422TBYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L422TBYx.xml"),
        );
        mcus.insert(
            "STM32L431C(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L431C(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32L431C(B-C)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L431C(B-C)Ux.xml"),
        );
        mcus.insert(
            "STM32L431C(B-C)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L431C(B-C)Yx.xml"),
        );
        mcus.insert(
            "STM32L431K(B-C)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L431K(B-C)Ux.xml"),
        );
        mcus.insert(
            "STM32L431R(B-C)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L431R(B-C)Ix.xml"),
        );
        mcus.insert(
            "STM32L431R(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L431R(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32L431R(B-C)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L431R(B-C)Yx.xml"),
        );
        mcus.insert(
            "STM32L431VCIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L431VCIx.xml"),
        );
        mcus.insert(
            "STM32L431VCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L431VCTx.xml"),
        );
        mcus.insert(
            "STM32L432K(B-C)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L432K(B-C)Ux.xml"),
        );
        mcus.insert(
            "STM32L433C(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L433C(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32L433C(B-C)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L433C(B-C)Ux.xml"),
        );
        mcus.insert(
            "STM32L433C(B-C)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L433C(B-C)Yx.xml"),
        );
        mcus.insert(
            "STM32L433R(B-C)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L433R(B-C)Ix.xml"),
        );
        mcus.insert(
            "STM32L433R(B-C)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L433R(B-C)Tx.xml"),
        );
        mcus.insert(
            "STM32L433R(B-C)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L433R(B-C)Yx.xml"),
        );
        mcus.insert(
            "STM32L433RCTxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L433RCTxP.xml"),
        );
        mcus.insert(
            "STM32L433VCIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L433VCIx.xml"),
        );
        mcus.insert(
            "STM32L433VCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L433VCTx.xml"),
        );
        mcus.insert(
            "STM32L442KCUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L442KCUx.xml"),
        );
        mcus.insert(
            "STM32L443CCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L443CCTx.xml"),
        );
        mcus.insert(
            "STM32L443CCUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L443CCUx.xml"),
        );
        mcus.insert(
            "STM32L443CCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L443CCYx.xml"),
        );
        mcus.insert(
            "STM32L443RCIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L443RCIx.xml"),
        );
        mcus.insert(
            "STM32L443RCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L443RCTx.xml"),
        );
        mcus.insert(
            "STM32L443RCYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L443RCYx.xml"),
        );
        mcus.insert(
            "STM32L443VCIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L443VCIx.xml"),
        );
        mcus.insert(
            "STM32L443VCTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L443VCTx.xml"),
        );
        mcus.insert(
            "STM32L451C(C-E)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L451C(C-E)Ux.xml"),
        );
        mcus.insert(
            "STM32L451R(C-E)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L451R(C-E)Ix.xml"),
        );
        mcus.insert(
            "STM32L451R(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L451R(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32L451R(C-E)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L451R(C-E)Yx.xml"),
        );
        mcus.insert(
            "STM32L451V(C-E)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L451V(C-E)Ix.xml"),
        );
        mcus.insert(
            "STM32L451V(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L451V(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32L452C(C-E)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L452C(C-E)Ux.xml"),
        );
        mcus.insert(
            "STM32L452R(C-E)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L452R(C-E)Ix.xml"),
        );
        mcus.insert(
            "STM32L452R(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L452R(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32L452R(C-E)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L452R(C-E)Yx.xml"),
        );
        mcus.insert(
            "STM32L452RETxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L452RETxP.xml"),
        );
        mcus.insert(
            "STM32L452V(C-E)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L452V(C-E)Ix.xml"),
        );
        mcus.insert(
            "STM32L452V(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L452V(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32L462CEUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L462CEUx.xml"),
        );
        mcus.insert(
            "STM32L462REIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L462REIx.xml"),
        );
        mcus.insert(
            "STM32L462RETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L462RETx.xml"),
        );
        mcus.insert(
            "STM32L462REYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L462REYx.xml"),
        );
        mcus.insert(
            "STM32L462VEIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L462VEIx.xml"),
        );
        mcus.insert(
            "STM32L462VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L462VETx.xml"),
        );
        mcus.insert(
            "STM32L471Q(E-G)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L471Q(E-G)Ix.xml"),
        );
        mcus.insert(
            "STM32L471R(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L471R(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L471V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L471V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L471Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L471Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L475R(C-E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L475R(C-E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L475V(C-E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L475V(C-E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L476J(E-G)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L476J(E-G)Yx.xml"),
        );
        mcus.insert(
            "STM32L476JGYxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L476JGYxP.xml"),
        );
        mcus.insert(
            "STM32L476M(E-G)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L476M(E-G)Yx.xml"),
        );
        mcus.insert(
            "STM32L476Q(E-G)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L476Q(E-G)Ix.xml"),
        );
        mcus.insert(
            "STM32L476R(C-E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L476R(C-E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L476V(C-E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L476V(C-E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L476Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L476Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L476ZGTxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L476ZGTxP.xml"),
        );
        mcus.insert(
            "STM32L485J(C-E)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L485J(C-E)Yx.xml"),
        );
        mcus.insert(
            "STM32L486JGYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L486JGYx.xml"),
        );
        mcus.insert(
            "STM32L486QGIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L486QGIx.xml"),
        );
        mcus.insert(
            "STM32L486RGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L486RGTx.xml"),
        );
        mcus.insert(
            "STM32L486VGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L486VGTx.xml"),
        );
        mcus.insert(
            "STM32L486ZGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L486ZGTx.xml"),
        );
        mcus.insert(
            "STM32L496A(E-G)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496A(E-G)Ix.xml"),
        );
        mcus.insert(
            "STM32L496AGIxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496AGIxP.xml"),
        );
        mcus.insert(
            "STM32L496Q(E-G)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496Q(E-G)Ix.xml"),
        );
        mcus.insert(
            "STM32L496R(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496R(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L496RGTxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496RGTxP.xml"),
        );
        mcus.insert(
            "STM32L496V(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496V(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L496V(E-G)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496V(E-G)Yx.xml"),
        );
        mcus.insert(
            "STM32L496VGYxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496VGYxP.xml"),
        );
        mcus.insert(
            "STM32L496Z(E-G)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496Z(E-G)Tx.xml"),
        );
        mcus.insert(
            "STM32L496ZGTxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L496ZGTxP.xml"),
        );
        mcus.insert(
            "STM32L4A6AGIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4A6AGIx.xml"),
        );
        mcus.insert(
            "STM32L4A6QGIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4A6QGIx.xml"),
        );
        mcus.insert(
            "STM32L4A6RGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4A6RGTx.xml"),
        );
        mcus.insert(
            "STM32L4A6VGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4A6VGTx.xml"),
        );
        mcus.insert(
            "STM32L4A6VGYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4A6VGYx.xml"),
        );
        mcus.insert(
            "STM32L4A6ZGTx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4A6ZGTx.xml"),
        );
        mcus.insert(
            "STM32L4R5A(G-I)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R5A(G-I)Ix.xml"),
        );
        mcus.insert(
            "STM32L4R5Q(G-I)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R5Q(G-I)Ix.xml"),
        );
        mcus.insert(
            "STM32L4R5V(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R5V(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32L4R5Z(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R5Z(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32L4R5Z(G-I)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R5Z(G-I)Yx.xml"),
        );
        mcus.insert(
            "STM32L4R5ZITxP".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R5ZITxP.xml"),
        );
        mcus.insert(
            "STM32L4R7AIIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R7AIIx.xml"),
        );
        mcus.insert(
            "STM32L4R7VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R7VITx.xml"),
        );
        mcus.insert(
            "STM32L4R7ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R7ZITx.xml"),
        );
        mcus.insert(
            "STM32L4R9A(G-I)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R9A(G-I)Ix.xml"),
        );
        mcus.insert(
            "STM32L4R9V(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R9V(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32L4R9Z(G-I)Jx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R9Z(G-I)Jx.xml"),
        );
        mcus.insert(
            "STM32L4R9Z(G-I)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R9Z(G-I)Tx.xml"),
        );
        mcus.insert(
            "STM32L4R9Z(G-I)Yx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4R9Z(G-I)Yx.xml"),
        );
        mcus.insert(
            "STM32L4S5AIIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S5AIIx.xml"),
        );
        mcus.insert(
            "STM32L4S5QIIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S5QIIx.xml"),
        );
        mcus.insert(
            "STM32L4S5VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S5VITx.xml"),
        );
        mcus.insert(
            "STM32L4S5ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S5ZITx.xml"),
        );
        mcus.insert(
            "STM32L4S5ZIYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S5ZIYx.xml"),
        );
        mcus.insert(
            "STM32L4S7AIIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S7AIIx.xml"),
        );
        mcus.insert(
            "STM32L4S7VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S7VITx.xml"),
        );
        mcus.insert(
            "STM32L4S7ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S7ZITx.xml"),
        );
        mcus.insert(
            "STM32L4S9AIIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S9AIIx.xml"),
        );
        mcus.insert(
            "STM32L4S9VITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S9VITx.xml"),
        );
        mcus.insert(
            "STM32L4S9ZIJx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S9ZIJx.xml"),
        );
        mcus.insert(
            "STM32L4S9ZITx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S9ZITx.xml"),
        );
        mcus.insert(
            "STM32L4S9ZIYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32L4S9ZIYx.xml"),
        );

        mcus.insert(
            "STM32G474MEYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G474MEYx.xml"),
        );
        mcus.insert(
            "STM32G474P(B-C-E)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G474P(B-C-E)Ix.xml"),
        );
        mcus.insert(
            "STM32G474Q(B-C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G474Q(B-C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32G474R(B-C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G474R(B-C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32G474V(B-C-E)Hx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G474V(B-C-E)Hx.xml"),
        );
        mcus.insert(
            "STM32G474V(B-C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G474V(B-C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32G483CETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G483CETx.xml"),
        );
        mcus.insert(
            "STM32G483CEUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G483CEUx.xml"),
        );
        mcus.insert(
            "STM32G483METx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G483METx.xml"),
        );
        mcus.insert(
            "STM32G483MEYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G483MEYx.xml"),
        );
        mcus.insert(
            "STM32G483PEIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G483PEIx.xml"),
        );
        mcus.insert(
            "STM32G483QETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G483QETx.xml"),
        );
        mcus.insert(
            "STM32G483RETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G483RETx.xml"),
        );
        mcus.insert(
            "STM32G483VEHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G483VEHx.xml"),
        );
        mcus.insert(
            "STM32G483VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G483VETx.xml"),
        );
        mcus.insert(
            "STM32G484CETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G484CETx.xml"),
        );
        mcus.insert(
            "STM32G484CEUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G484CEUx.xml"),
        );
        mcus.insert(
            "STM32G484METx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G484METx.xml"),
        );
        mcus.insert(
            "STM32G484MEYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G484MEYx.xml"),
        );
        mcus.insert(
            "STM32G484PEIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G484PEIx.xml"),
        );
        mcus.insert(
            "STM32G484QETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G484QETx.xml"),
        );
        mcus.insert(
            "STM32G484RETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G484RETx.xml"),
        );
        mcus.insert(
            "STM32G484VEHx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G484VEHx.xml"),
        );
        mcus.insert(
            "STM32G484VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G484VETx.xml"),
        );
        mcus.insert(
            "STM32G491C(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G491C(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32G491C(C-E)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G491C(C-E)Ux.xml"),
        );
        mcus.insert(
            "STM32G491K(C-E)Ux".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G491K(C-E)Ux.xml"),
        );
        mcus.insert(
            "STM32G491M(C-E)Sx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G491M(C-E)Sx.xml"),
        );
        mcus.insert(
            "STM32G491M(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G491M(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32G491R(C-E)Ix".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G491R(C-E)Ix.xml"),
        );
        mcus.insert(
            "STM32G491R(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G491R(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32G491REYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G491REYx.xml"),
        );
        mcus.insert(
            "STM32G491V(C-E)Tx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G491V(C-E)Tx.xml"),
        );
        mcus.insert(
            "STM32G4A1CETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G4A1CETx.xml"),
        );
        mcus.insert(
            "STM32G4A1CEUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G4A1CEUx.xml"),
        );
        mcus.insert(
            "STM32G4A1KEUx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G4A1KEUx.xml"),
        );
        mcus.insert(
            "STM32G4A1MESx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G4A1MESx.xml"),
        );
        mcus.insert(
            "STM32G4A1METx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G4A1METx.xml"),
        );
        mcus.insert(
            "STM32G4A1REIx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G4A1REIx.xml"),
        );
        mcus.insert(
            "STM32G4A1RETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G4A1RETx.xml"),
        );
        mcus.insert(
            "STM32G4A1REYx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G4A1REYx.xml"),
        );
        mcus.insert(
            "STM32G4A1VETx".to_owned(),
            include_str!("../cube-MX-db/mcu/STM32G4A1VETx.xml"),
        );

        mcus
    };
}
